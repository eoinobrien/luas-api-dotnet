name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ created ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core 5.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal

  pack:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET Core 5.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Pack
      run: dotnet pack --output ./artifacts --configuration Release -p:Version=${{ github.event.release.tag_name }}
    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: ./artifacts
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./artifacts

  publish:
    runs-on: ubuntu-latest
    needs: pack
    if: github.event_name == 'release'
    steps:
    - name: Setup .NET Core 5.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - uses: actions/download-artifact@v1
      with:
        name: artifacts
        path: ./artifacts
    - name: Publish packages
      run: dotnet nuget push ./artifacts/**.nupkg --source nuget.org --api-key ${{secrets.NUGET_TOKEN}}

